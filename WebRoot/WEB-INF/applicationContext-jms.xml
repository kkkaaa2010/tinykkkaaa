<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
    
    <!-- JMS消息组件 start at 2016-04-11 -->
    
    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="vm://127.0.0.1"/>
    	<!-- <property name="brokerURL" value="tcp://localhost:61616"/> -->
	</bean>
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
    	<property name="connectionFactory" ref="targetConnectionFactory"/>
    	<property name="maxConnections" value="10"/>
	</bean>
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
    	<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
    	<property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
	</bean>
	
	<bean id="emailMessageConverter" class="com.tinykkkaaa.platform.framework.jms.converter.EmailMessageConverter" ></bean>
	<bean id="excelMessageConverter" class="com.tinykkkaaa.platform.framework.jms.converter.ExcelMessageConverter" ></bean>
	
	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    	<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
    	<property name="connectionFactory" ref="connectionFactory"/>
    	<property name="messageConverter" ref="excelMessageConverter"/>
	</bean>
	
	<!--队列目的地，点对点的-->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
	    <constructor-arg>
	        <value>queue</value>
	    </constructor-arg>
	</bean>
	<bean id="sessionAwareQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>sessionAwareQueue</value>
		</constructor-arg>
	</bean>
	<bean id="adapterQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>adapterQueue</value>
		</constructor-arg>
	</bean>
	<!-- 用于监控消息返回信息队列 -->
	<bean id="responseQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>responseQueue</value>
		</constructor-arg>
	</bean>
	
	<!--主题目的地，一对多的-->
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
	    <constructor-arg value="topic"/>
	</bean>
	
	<!-- 生产者 -->
	<bean id="producerService" class="com.tinykkkaaa.platform.framework.jms.service.impl.ProducerServiceImpl">
		<property name="jmsTemplate" ref="jmsTemplate"></property>
	</bean>
	
	<!-- 生产者(可传递java对象) -->
	<bean id="producerObjService" class="com.tinykkkaaa.platform.framework.jms.service.impl.ProducerObjServiceImpl" factory-method="getInstance">
		<property name="jmsTemplate" ref="jmsTemplate"></property>
		<property name="destination" ref="adapterQueue"></property>
		<property name="responseQueue" ref="responseQueue"></property>
	</bean>
	
	<!-- 消息监听适配器 -->
	<bean id="consumerMessageListener" class="com.tinykkkaaa.platform.framework.jms.listener.ConsumerMessageListener" ></bean>

	<!-- 可以获取session的MessageListener -->
	<bean id="consumerSessionAwareMessageListener" class="com.tinykkkaaa.platform.framework.jms.listener.ConsumerSessionAwareMessageListener">
		<property name="destination" ref="queueDestination" />
	</bean>

	<!-- 可配置POJO,同时可以转换java对象的MessageListener -->
	<bean id="consumerMessageListenerAdapter" class="com.tinykkkaaa.platform.framework.jms.listener.ConsumerMessageListenerAdapter">
	</bean>
	<bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="consumerMessageListenerAdapter">
			<!-- <bean class="com.tinykkkaaa.platform.framework.jms.listener.ConsumerMessageListenerAdapter" /> -->
		</property>
		<property name="defaultListenerMethod" value="receiveMessage" />
		<property name="messageConverter" ref="excelMessageConverter" />
	</bean>
	
	<!-- 返回消息监听适配器 -->
	<bean id="consumerResponseMessageListener" class="com.tinykkkaaa.platform.framework.jms.listener.ConsumerResponseMessageListener" ></bean> 
	
	<!-- 消息监听容器 -->
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestination" />
		<property name="messageListener" ref="consumerMessageListener" />
	</bean>

	<bean id="sessionAwareListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="sessionAwareQueue" />
		<property name="messageListener" ref="consumerSessionAwareMessageListener" />
	</bean>
	
	<bean id="messageListenerAdapterContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="adapterQueue" />
		<property name="messageListener" ref="messageListenerAdapter" />
	</bean>

	<!-- responseQueue对应的监听容器 -->
	<bean id="responseQueueMessageListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="responseQueue" />
		<property name="messageListener" ref="consumerResponseMessageListener" />
	</bean>  
	
	<!-- JMS消息组件 end at 2016-04-11 -->

</beans>